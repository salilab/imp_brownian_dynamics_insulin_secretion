// Autogenerated by tools/build/setup_swig_wrappers.py
// Do not edit - any changes will be lost!

%module(directors="1", allprotected="1", moduleimport="import $module") "IMP.insulinsecretion"
%feature("autodoc", 1);

%pythonbegin %{
# This wrapper is part of IMP,
# Copyright 2007-2025 IMP Inventors. All rights reserved.

from __future__ import print_function, division, absolute_import
%}

/* '#' formats in parsing or building Python values
   (e.g. in PyObject_CallFunction) use Py_ssize_t, not int, for lengths
   in Python >= 2.5 */
%begin %{
#define PY_SSIZE_T_CLEAN
%}

// Warning 314: 'lambda' is a python keyword, renaming to '_lambda'
%warnfilter(321,302,314);

%{
#include <boost/version.hpp>
#include <boost/exception/all.hpp>

#include <boost/type_traits/is_convertible.hpp>
#include <boost/utility/enable_if.hpp>
#include <exception>
// for serialization/pickle support
#include <cereal/archives/binary.hpp>

#ifdef __cplusplus
extern "C"
#endif

// suppress warning
SWIGEXPORT
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init();
%}

%{
#include "IMP.h"
#include "IMP/kernel_config.h"
%}

%{
#include <IMP/internal/swig.h>
%}
%{
#include <IMP/internal/swig_base.h>
%}
%{
#include <IMP/internal/swig_helpers.h>
%}
%{
#include <IMP/internal/swig_helpers_base.h>
%}
%{
#include "IMP/cgal.h"
#include "IMP/cgal/cgal_config.h"
%}

%{
#include "IMP/algebra.h"
#include "IMP/algebra/algebra_config.h"
%}

%{
#include <IMP/algebra/internal/swig.h>
%}
%{
#include "IMP/display.h"
#include "IMP/display/display_config.h"
%}

%{
#include "IMP/score_functor.h"
#include "IMP/score_functor/score_functor_config.h"
%}

%{
#include "IMP/core.h"
#include "IMP/core/core_config.h"
%}

%{
#include "IMP/container.h"
#include "IMP/container/container_config.h"
%}

%{
#include "IMP/insulinsecretion.h"
#include "IMP/insulinsecretion/insulinsecretion_config.h"
%}


%implicitconv;
%include "std_vector.i"
%include "std_string.i"
%include "std_pair.i"

// Help SWIG with cereal macros
#define CEREAL_CLASS_VERSION(x, y)

%pythoncode %{
_value_types=[]
_object_types=[]
_raii_types=[]
_plural_types=[]
%}

%include "typemaps.i"

#ifdef NDEBUG
#error "The python wrappers must not be built with NDEBUG"
#endif


%include "IMP/kernel_config.h" 
%include "IMP_kernel.compiler_warnings.i"
%include "IMP_kernel.decorators.i"
%include "IMP_kernel.directors.i"
%include "IMP_kernel.exceptions.i"
%include "IMP_kernel.import_numpy.i"
%include "IMP_kernel.refcount.i"
%include "IMP_kernel.streams.i"
%include "IMP_kernel.streams_kernel.i"
%include "IMP_kernel.types.i"
%include "IMP/base_macros.h"
%include "IMP/bracket_macros.h"
%include "IMP/check_macros.h"
%include "IMP/comparison_macros.h"
%include "IMP/compiler_macros.h"
%include "IMP/container_macros.h"
%include "IMP/decorator_macros.h"
%include "IMP/deprecation_macros.h"
%include "IMP/doxygen_macros.h"
%include "IMP/graph_macros.h"
%include "IMP/hash_macros.h"
%include "IMP/log_macros.h"
%include "IMP/object_macros.h"
%include "IMP/pair_macros.h"
%include "IMP/quad_macros.h"
%include "IMP/raii_macros.h"
%include "IMP/ref_counted_macros.h"
%include "IMP/set_map_macros.h"
%include "IMP/showable_macros.h"
%include "IMP/singleton_macros.h"
%include "IMP/swap_macros.h"
%include "IMP/swig_macros.h"
%include "IMP/thread_macros.h"
%include "IMP/triplet_macros.h"
%include "IMP/tuple_macros.h"
%include "IMP/utility_macros.h"
%include "IMP/value_macros.h"
%include "IMP/warning_macros.h"
%import "IMP_kernel.i"
%include "IMP/cgal/cgal_config.h" 
%import "IMP_cgal.i"
%include "IMP/algebra/algebra_config.h" 
%include "IMP_algebra.types.i"
%include "IMP/algebra/algebra_macros.h"
%include "IMP/algebra/geometric_primitive_macros.h"
%import "IMP_algebra.i"
%include "IMP/display/display_config.h" 
%include "IMP/display/display_macros.h"
%include "IMP/display/geometry_macros.h"
%include "IMP/display/writer_macros.h"
%import "IMP_display.i"
%include "IMP/score_functor/score_functor_config.h" 
%include "IMP/score_functor/distance_pair_score_macros.h"
%include "IMP/score_functor/surface_distance_pair_score_macros.h"
%import "IMP_score_functor.i"
%include "IMP/core/core_config.h" 
%import "IMP_core.i"
%include "IMP/container/container_config.h" 
%import "IMP_container.i"
%include "IMP/insulinsecretion/insulinsecretion_config.h" 
%include "IMP_insulinsecretion.impl.i"

namespace IMP { namespace insulinsecretion {
const std::string get_module_version();
std::string get_example_path(std::string fname);
std::string get_data_path(std::string fname);
} }

%pythoncode %{
from . import _version_check
_version_check.check_version(get_module_version())
__version__ = get_module_version()
%}
